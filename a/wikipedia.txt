
Main menu

WikipediaThe Free Encyclopedia
Search Wikipedia
Search
Create account
Log in

Personal tools
Contents hide
(Top)
Motivations
Definition
Toggle Definition subsection
Term frequency
Inverse document frequency
Term frequency–inverse document frequency
Justification of idf
Link with information theory
Example of tf–idf
Beyond terms
Derivatives
See also
References
External links and suggested reading
tf–idf

Article
Talk
Read
Edit
View history

Tools
From Wikipedia, the free encyclopedia
In information retrieval, tf–idf (also TF*IDF, TFIDF, TF–IDF, or Tf–idf), short for term frequency–inverse document frequency, is a measure of importance of a word to a document in a collection or corpus, adjusted for the fact that some words appear more frequently in general.[1] It was often used as a weighting factor in searches of information retrieval, text mining, and user modeling. A survey conducted in 2015 showed that 83% of text-based recommender systems in digital libraries used tf–idf.[2]

Variations of the tf–idf weighting scheme were often used by search engines as a central tool in scoring and ranking a document's relevance given a user query.

One of the simplest ranking functions is computed by summing the tf–idf for each query term; many more sophisticated ranking functions are variants of this simple model.

Motivations
Karen Spärck Jones (1972) conceived a statistical interpretation of term-specificity called Inverse Document Frequency (idf), which became a cornerstone of term weighting:[3]

The specificity of a term can be quantified as an inverse function of the number of documents in which it occurs.

For example, the df (document frequency) and idf for some words in Shakespeare's 37 plays are as follows:[4]

Word	df	idf
Romeo	1	1.57
salad	2	1.27
Falstaff	4	0.967
forest	12	0.489
battle	21	0.246
wit	34	0.037
fool	36	0.012
good	37	0
sweet	37	0
We see that "Romeo", "Falstaff", and "salad" appears in very few plays, so seeing these words, one could get a good idea as to which play it might be. In contrast, "good" and "sweet" appears in every play and are completely uninformative as to which play it is.

Definition
The tf–idf is the product of two statistics, term frequency and inverse document frequency. There are various ways for determining the exact values of both statistics.
A formula that aims to define the importance of a keyword or phrase within a document or a web page.
Variants of term frequency (tf) weight
weighting scheme	tf weight
binary	
0
,
1
{\displaystyle {0,1}}
raw count	
?
?
,
?
{\displaystyle f_{t,d}}
term frequency	
?
?
,
?
/
?
?
'
?
?
?
?
'
,
?
{\displaystyle f_{t,d}{\Bigg /}{\sum _{t'\in d}{f_{t',d}}}}
log normalization	
log
?
(
1
+
?
?
,
?
)
{\displaystyle \log(1+f_{t,d})}
double normalization 0.5	
0.5
+
0.5
·
?
?
,
?
max
{
?
'
?
?
}
?
?
'
,
?
{\displaystyle 0.5+0.5\cdot {\frac {f_{t,d}}{\max _{\{t'\in d\}}{f_{t',d}}}}}
double normalization K	
?
+
(
1
-
?
)
?
?
,
?
max
{
?
'
?
?
}
?
?
'
,
?
{\displaystyle K+(1-K){\frac {f_{t,d}}{\max _{\{t'\in d\}}{f_{t',d}}}}}
Term frequency
Term frequency, tf(t,d), is the relative frequency of term t within document d,

t
f
(
?
,
?
)
=
?
?
,
?
?
?
'
?
?
?
?
'
,
?
{\displaystyle \mathrm {tf} (t,d)={\frac {f_{t,d}}{\sum _{t'\in d}{f_{t',d}}}}},
where ft,d is the raw count of a term in a document, i.e., the number of times that term t occurs in document d. Note the denominator is simply the total number of terms in document d (counting each occurrence of the same term separately). There are various other ways to define term frequency:[5]:?128?

the raw count itself: tf(t,d) = ft,d
Boolean "frequencies": tf(t,d) = 1 if t occurs in d and 0 otherwise;
logarithmically scaled frequency: tf(t,d) = log (1 + ft,d);[6]
augmented frequency, to prevent a bias towards longer documents, e.g. raw frequency divided by the raw frequency of the most frequently occurring term in the document:
t
f
(
?
,
?
)
=
0.5
+
0.5
·
?
?
,
?
max
{
?
?
'
,
?
:
?
'
?
?
}
{\displaystyle \mathrm {tf} (t,d)=0.5+0.5\cdot {\frac {f_{t,d}}{\max\{f_{t',d}:t'\in d\}}}}
Inverse document frequency
Variants of inverse document frequency (idf) weight
weighting scheme	idf weight (
?
?
=
|
{
?
?
?
:
?
?
?
}
|
{\displaystyle n_{t}=|\{d\in D:t\in d\}|})
unary	1
inverse document frequency	
log
?
?
?
?
=
-
log
?
?
?
?
{\displaystyle \log {\frac {N}{n_{t}}}=-\log {\frac {n_{t}}{N}}}
inverse document frequency smooth	
log
?
(
?
1
+
?
?
)
+
1
{\displaystyle \log \left({\frac {N}{1+n_{t}}}\right)+1}
inverse document frequency max	
log
?
(
max
{
?
'
?
?
}
?
?
'
1
+
?
?
)
{\displaystyle \log \left({\frac {\max _{\{t'\in d\}}n_{t'}}{1+n_{t}}}\right)}
probabilistic inverse document frequency	
log
?
?
-
?
?
?
?
{\displaystyle \log {\frac {N-n_{t}}{n_{t}}}}
The inverse document frequency is a measure of how much information the word provides, i.e., how common or rare it is across all documents. It is the logarithmically scaled inverse fraction of the documents that contain the word (obtained by dividing the total number of documents by the number of documents containing the term, and then taking the logarithm of that quotient):

i
d
f
(
?
,
?
)
=
log
?
?
|
{
?
:
?
?
?
 and 
?
?
?
}
|
{\displaystyle \mathrm {idf} (t,D)=\log {\frac {N}{|\{d:d\in D{\text{ and }}t\in d\}|}}}
with

?
{\displaystyle N}: total number of documents in the corpus 
?
=
|
?
|
{\displaystyle N={|D|}}
|
{
?
?
?
:
?
?
?
}
|
{\displaystyle |\{d\in D:t\in d\}|} : number of documents where the term 
?
{\displaystyle t} appears (i.e., 
t
f
(
?
,
?
)
?
0
{\displaystyle \mathrm {tf} (t,d)\neq 0}). If the term is not in the corpus, this will lead to a division-by-zero. It is therefore common to adjust the numerator 
1
+
?
{\displaystyle 1+N} and denominator to 
1
+
|
{
?
?
?
:
?
?
?
}
|
{\displaystyle 1+|\{d\in D:t\in d\}|}.

Plot of different inverse document frequency functions: standard, smooth, probabilistic.
Term frequency–inverse document frequency
Variants of term frequency-inverse document frequency (tf–idf) weights
weighting scheme	tf-idf
count-idf	
?
?
,
?
·
log
?
?
?
?
{\displaystyle f_{t,d}\cdot \log {\frac {N}{n_{t}}}}
double normalization-idf	
(
0.5
+
0.5
?
?
,
?
max
?
?
?
,
?
)
·
log
?
?
?
?
{\displaystyle \left(0.5+0.5{\frac {f_{t,q}}{\max _{t}f_{t,q}}}\right)\cdot \log {\frac {N}{n_{t}}}}
log normalization-idf	
(
1
+
log
?
?
?
,
?
)
·
log
?
?
?
?
{\displaystyle (1+\log f_{t,d})\cdot \log {\frac {N}{n_{t}}}}
Then tf–idf is calculated as

t
f
i
d
f
(
?
,
?
,
?
)
=
t
f
(
?
,
?
)
·
i
d
f
(
?
,
?
)
{\displaystyle \mathrm {tfidf} (t,d,D)=\mathrm {tf} (t,d)\cdot \mathrm {idf} (t,D)}
A high weight in tf–idf is reached by a high term frequency (in the given document) and a low document frequency of the term in the whole collection of documents; the weights hence tend to filter out common terms. Since the ratio inside the idf's log function is always greater than or equal to 1, the value of idf (and tf–idf) is greater than or equal to 0. As a term appears in more documents, the ratio inside the logarithm approaches 1, bringing the idf and tf–idf closer to 0.

Justification of idf
Idf was introduced as "term specificity" by Karen Spärck Jones in a 1972 paper. Although it has worked well as a heuristic, its theoretical foundations have been troublesome for at least three decades afterward, with many researchers trying to find information theoretic justifications for it.[7]

Spärck Jones's own explanation did not propose much theory, aside from a connection to Zipf's law.[7] Attempts have been made to put idf on a probabilistic footing,[8] by estimating the probability that a given document d contains a term t as the relative document frequency,

?
(
?
|
?
)
=
|
{
?
?
?
:
?
?
?
}
|
?
,
{\displaystyle P(t|D)={\frac {|\{d\in D:t\in d\}|}{N}},}
so that we can define idf as

i
d
f
=
-
log
?
?
(
?
|
?
)
=
log
?
1
?
(
?
|
?
)
=
log
?
?
|
{
?
?
?
:
?
?
?
}
|
{\displaystyle {\begin{aligned}\mathrm {idf} &=-\log P(t|D)\\&=\log {\frac {1}{P(t|D)}}\\&=\log {\frac {N}{|\{d\in D:t\in d\}|}}\end{aligned}}}
Namely, the inverse document frequency is the logarithm of "inverse" relative document frequency.

This probabilistic interpretation in turn takes the same form as that of self-information. However, applying such information-theoretic notions to problems in information retrieval leads to problems when trying to define the appropriate event spaces for the required probability distributions: not only documents need to be taken into account, but also queries and terms.[7]

Link with information theory
Both term frequency and inverse document frequency can be formulated in terms of information theory; it helps to understand why their product has a meaning in terms of joint informational content of a document. A characteristic assumption about the distribution 
?
(
?
,
?
)
{\displaystyle p(d,t)} is that:

?
(
?
|
?
)
=
1
|
{
?
?
?
:
?
?
?
}
|
{\displaystyle p(d|t)={\frac {1}{|\{d\in D:t\in d\}|}}}
This assumption and its implications, according to Aizawa: "represent the heuristic that tf–idf employs."[9]

The conditional entropy of a "randomly chosen" document in the corpus 
?
{\displaystyle D}, conditional to the fact it contains a specific term 
?
{\displaystyle t} (and assuming that all documents have equal probability to be chosen) is:

?
(
?
|
?
=
?
)
=
-
?
?
?
?
|
?
log
?
?
?
|
?
=
-
log
?
1
|
{
?
?
?
:
?
?
?
}
|
=
log
?
|
{
?
?
?
:
?
?
?
}
|
|
?
|
+
log
?
|
?
|
=
-
i
d
f
(
?
)
+
log
?
|
?
|
{\displaystyle H({\cal {D}}|{\cal {T}}=t)=-\sum _{d}p_{d|t}\log p_{d|t}=-\log {\frac {1}{|\{d\in D:t\in d\}|}}=\log {\frac {|\{d\in D:t\in d\}|}{|D|}}+\log |D|=-\mathrm {idf} (t)+\log |D|}
In terms of notation, 
?
{\displaystyle {\cal {D}}} and 
?
{\displaystyle {\cal {T}}} are "random variables" corresponding to respectively draw a document or a term. The mutual information can be expressed as

?
(
?
;
?
)
=
?
(
?
)
-
?
(
?
|
?
)
=
?
?
?
?
·
(
?
(
?
)
-
?
(
?
|
?
=
?
)
)
=
?
?
?
?
·
i
d
f
(
?
)
{\displaystyle M({\cal {T}};{\cal {D}})=H({\cal {D}})-H({\cal {D}}|{\cal {T}})=\sum _{t}p_{t}\cdot (H({\cal {D}})-H({\cal {D}}|W=t))=\sum _{t}p_{t}\cdot \mathrm {idf} (t)}
The last step is to expand 
?
?
{\displaystyle p_{t}}, the unconditional probability to draw a term, with respect to the (random) choice of a document, to obtain:

?
(
?
;
?
)
=
?
?
,
?
?
?
|
?
·
?
?
·
i
d
f
(
?
)
=
?
?
,
?
t
f
(
?
,
?
)
·
1
|
?
|
·
i
d
f
(
?
)
=
1
|
?
|
?
?
,
?
t
f
(
?
,
?
)
·
i
d
f
(
?
)
.
{\displaystyle M({\cal {T}};{\cal {D}})=\sum _{t,d}p_{t|d}\cdot p_{d}\cdot \mathrm {idf} (t)=\sum _{t,d}\mathrm {tf} (t,d)\cdot {\frac {1}{|D|}}\cdot \mathrm {idf} (t)={\frac {1}{|D|}}\sum _{t,d}\mathrm {tf} (t,d)\cdot \mathrm {idf} (t).}
This expression shows that summing the Tf–idf of all possible terms and documents recovers the mutual information between documents and term taking into account all the specificities of their joint distribution.[9] Each Tf–idf hence carries the "bit of information" attached to a term x document pair.

Example of tf–idf
Suppose that we have term count tables of a corpus consisting of only two documents, as listed on the right.

Document 2
Term	Term Count
this	1
is	1
another	2
example	3
Document 1
Term	Term Count
this	1
is	1
a	2
sample	1
The calculation of tf–idf for the term "this" is performed as follows:

In its raw frequency form, tf is just the frequency of the "this" for each document. In each document, the word "this" appears once; but as the document 2 has more words, its relative frequency is smaller.

t
f
(
?
?
h
?
?
?
,
?
1
)
=
1
5
=
0.2
{\displaystyle \mathrm {tf} ({\mathsf {''this''}},d_{1})={\frac {1}{5}}=0.2}
t
f
(
?
?
h
?
?
?
,
?
2
)
=
1
7
˜
0.14
{\displaystyle \mathrm {tf} ({\mathsf {''this''}},d_{2})={\frac {1}{7}}\approx 0.14}
An idf is constant per corpus, and accounts for the ratio of documents that include the word "this". In this case, we have a corpus of two documents and all of them include the word "this".

i
d
f
(
?
?
h
?
?
?
,
?
)
=
log
?
(
2
2
)
=
0
{\displaystyle \mathrm {idf} ({\mathsf {''this''}},D)=\log \left({\frac {2}{2}}\right)=0}
So tf–idf is zero for the word "this", which implies that the word is not very informative as it appears in all documents.

t
f
i
d
f
(
?
?
h
?
?
?
,
?
1
,
?
)
=
0.2
×
0
=
0
{\displaystyle \mathrm {tfidf} ({\mathsf {''this''}},d_{1},D)=0.2\times 0=0}
t
f
i
d
f
(
?
?
h
?
?
?
,
?
2
,
?
)
=
0.14
×
0
=
0
{\displaystyle \mathrm {tfidf} ({\mathsf {''this''}},d_{2},D)=0.14\times 0=0}
The word "example" is more interesting - it occurs three times, but only in the second document:

t
f
(
?
?
?
?
?
?
?
?
?
,
?
1
)
=
0
5
=
0
{\displaystyle \mathrm {tf} ({\mathsf {''example''}},d_{1})={\frac {0}{5}}=0}
t
f
(
?
?
?
?
?
?
?
?
?
,
?
2
)
=
3
7
˜
0.429
{\displaystyle \mathrm {tf} ({\mathsf {''example''}},d_{2})={\frac {3}{7}}\approx 0.429}
i
d
f
(
?
?
?
?
?
?
?
?
?
,
?
)
=
log
?
(
2
1
)
=
0.301
{\displaystyle \mathrm {idf} ({\mathsf {''example''}},D)=\log \left({\frac {2}{1}}\right)=0.301}
Finally,

t
f
i
d
f
(
?
?
?
?
?
?
?
?
?
,
?
1
,
?
)
=
t
f
(
?
?
?
?
?
?
?
?
?
,
?
1
)
×
i
d
f
(
?
?
?
?
?
?
?
?
?
,
?
)
=
0
×
0.301
=
0
{\displaystyle \mathrm {tfidf} ({\mathsf {''example''}},d_{1},D)=\mathrm {tf} ({\mathsf {''example''}},d_{1})\times \mathrm {idf} ({\mathsf {''example''}},D)=0\times 0.301=0}
t
f
i
d
f
(
?
?
?
?
?
?
?
?
?
,
?
2
,
?
)
=
t
f
(
?
?
?
?
?
?
?
?
?
,
?
2
)
×
i
d
f
(
?
?
?
?
?
?
?
?
?
,
?
)
=
0.429
×
0.301
˜
0.129
{\displaystyle \mathrm {tfidf} ({\mathsf {''example''}},d_{2},D)=\mathrm {tf} ({\mathsf {''example''}},d_{2})\times \mathrm {idf} ({\mathsf {''example''}},D)=0.429\times 0.301\approx 0.129}
(using the base 10 logarithm).

Beyond terms
The idea behind tf–idf also applies to entities other than terms. In 1998, the concept of idf was applied to citations.[10] The authors argued that "if a very uncommon citation is shared by two documents, this should be weighted more highly than a citation made by a large number of documents". In addition, tf–idf was applied to "visual words" with the purpose of conducting object matching in videos,[11] and entire sentences.[12] However, the concept of tf–idf did not prove to be more effective in all cases than a plain tf scheme (without idf). When tf–idf was applied to citations, researchers could find no improvement over a simple citation-count weight that had no idf component.[13]

Derivatives
A number of term-weighting schemes have derived from tf–idf. One of them is TF–PDF (term frequency * proportional document frequency).[14] TF–PDF was introduced in 2001 in the context of identifying emerging topics in the media. The PDF component measures the difference of how often a term occurs in different domains. Another derivate is TF–IDuF. In TF–IDuF,[15] idf is not calculated based on the document corpus that is to be searched or recommended. Instead, idf is calculated on users' personal document collections. The authors report that TF–IDuF was equally effective as tf–idf but could also be applied in situations when, e.g., a user modeling system has no access to a global document corpus.

See also
Word embedding
Kullback–Leibler divergence
Latent Dirichlet allocation
Latent semantic analysis
Mutual information
Noun phrase
Okapi BM25
PageRank
Vector space model
Word count
SMART Information Retrieval System
References
 Rajaraman, A.; Ullman, J.D. (2011). "Data Mining" (PDF). Mining of Massive Datasets. pp. 1–17. doi:10.1017/CBO9781139058452.002. ISBN 978-1-139-05845-2.
 Breitinger, Corinna; Gipp, Bela; Langer, Stefan (2015-07-26). "Research-paper recommender systems: a literature survey". International Journal on Digital Libraries. 17 (4): 305–338. doi:10.1007/s00799-015-0156-0. ISSN 1432-5012. S2CID 207035184.
 Spärck Jones, K. (1972). "A Statistical Interpretation of Term Specificity and Its Application in Retrieval". Journal of Documentation. 28 (1): 11–21. CiteSeerX 10.1.1.115.8343. doi:10.1108/eb026526. S2CID 2996187.
 Speech and Language Processing (3rd ed. draft), Dan Jurafsky and James H. Martin, chapter 14.https://web.stanford.edu/~jurafsky/slp3/14.pdf
 Manning, C.D.; Raghavan, P.; Schutze, H. (2008). "Scoring, term weighting, and the vector space model" (PDF). Introduction to Information Retrieval. p. 100. doi:10.1017/CBO9780511809071.007. ISBN 978-0-511-80907-1.
 "TFIDF statistics | SAX-VSM".
 Robertson, S. (2004). "Understanding inverse document frequency: On theoretical arguments for IDF". Journal of Documentation. 60 (5): 503–520. doi:10.1108/00220410410560582.
 See also Probability estimates in practice in Introduction to Information Retrieval.
 Aizawa, Akiko (2003). "An information-theoretic perspective of tf–idf measures". Information Processing and Management. 39 (1): 45–65. doi:10.1016/S0306-4573(02)00021-3. S2CID 45793141.
 Bollacker, Kurt D.; Lawrence, Steve; Giles, C. Lee (1998-01-01). "CiteSeer". Proceedings of the second international conference on Autonomous agents - AGENTS '98. pp. 116–123. doi:10.1145/280765.280786. ISBN 978-0-89791-983-8. S2CID 3526393.
 Sivic, Josef; Zisserman, Andrew (2003-01-01). "Video Google: A text retrieval approach to object matching in videos". Proceedings Ninth IEEE International Conference on Computer Vision. ICCV '03. pp. 1470–. doi:10.1109/ICCV.2003.1238663. ISBN 978-0-7695-1950-0. S2CID 14457153.
 Seki, Yohei. "Sentence Extraction by tf/idf and Position Weighting from Newspaper Articles" (PDF). National Institute of Informatics.
 Beel, Joeran; Breitinger, Corinna (2017). "Evaluating the CC-IDF citation-weighting scheme – How effectively can 'Inverse Document Frequency' (IDF) be applied to references?" (PDF). Proceedings of the 12th IConference. Archived from the original (PDF) on 2020-09-22. Retrieved 2017-01-29.
 Khoo Khyou Bun; Bun, Khoo Khyou; Ishizuka, M. (2001). "Emerging Topic Tracking System". Proceedings Third International Workshop on Advanced Issues of E-Commerce and Web-Based Information Systems. WECWIS 2001. pp. 2–11. CiteSeerX 10.1.1.16.7986. doi:10.1109/wecwis.2001.933900. ISBN 978-0-7695-1224-2. S2CID 1049263.
 Langer, Stefan; Gipp, Bela (2017). "TF-IDuF: A Novel Term-Weighting Scheme for User Modeling based on Users' Personal Document Collections" (PDF). IConference.
Salton, G; McGill, M. J. (1986). Introduction to modern information retrieval. McGraw-Hill. ISBN 978-0-07-054484-0.
Salton, G.; Fox, E. A.; Wu, H. (1983). "Extended Boolean information retrieval". Communications of the ACM. 26 (11): 1022–1036. doi:10.1145/182.358466. hdl:1813/6351. S2CID 207180535.
Salton, G.; Buckley, C. (1988). "Term-weighting approaches in automatic text retrieval" (PDF). Information Processing & Management. 24 (5): 513–523. doi:10.1016/0306-4573(88)90021-0. hdl:1813/6721. S2CID 7725217.
Wu, H. C.; Luk, R.W.P.; Wong, K.F.; Kwok, K.L. (2008). "Interpreting TF-IDF term weights as making relevance decisions". ACM Transactions on Information Systems. 26 (3): 1. doi:10.1145/1361684.1361686. hdl:10397/10130. S2CID 18303048.
External links and suggested reading
Gensim is a Python library for vector space modeling and includes tf–idf weighting.
Anatomy of a search engine
tf–idf and related definitions as used in Lucene
TfidfTransformer in scikit-learn
Text to Matrix Generator (TMG) MATLAB toolbox that can be used for various tasks in text mining (TM) specifically i) indexing, ii) retrieval, iii) dimensionality reduction, iv) clustering, v) classification. The indexing step offers the user the ability to apply local and global weighting methods, including tf–idf.
Term-frequency explained Explanation of term-frequency
Categories: Statistical natural language processingRanking functionsVector space model
This page was last edited on 17 March 2024, at 14:42 (UTC).
Text is available under the Creative Commons Attribution-ShareAlike License 4.0; additional terms may apply. By using this site, you agree to the Terms of Use and Privacy Policy. Wikipedia® is a registered trademark of the Wikimedia Foundation, Inc., a non-profit organization.
Privacy policyAbout WikipediaDisclaimersContact WikipediaCode of ConductDevelopersStatisticsCookie statementMobile viewWikimedia FoundationPowered by MediaWiki
